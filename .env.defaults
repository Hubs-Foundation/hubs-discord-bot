# To override these variables, create a .env file containing the overrides.


# The token for the Discord bot. Fill this in with a token from https://discordapp.com/developers/applications/.
DISCORD_BOT_TOKEN=

# The tokens for the Slack bot https://api.slack.com/apps
SLACK_BOT_TOKEN=
SLACK_SIGNING_SECRET=

# The hostname of the Reticulum backend to connect to.
RETICULUM_HOST=dev.reticulum.io

# The key for reticulum used to register hubs bindings.
# Find in Hubs Cloud: sudo vim /hab/svc/reticulum/config/config.toml
RETICULUM_BOT_ACCESS_KEY=

# A comma-separated list of hostnames for Hubs rooms that the bot should be interested in.
HUBS_HOSTS=localhost,hubs.local

# The name of the Discord webhook that the Hubs bot tries to post messages using. If this webhook
# doesn't exist, it will use the first one in the list for the channel. If none exist, the bot won't
# bridge chat from Hubs through to Discord.
HUBS_HOOK=Hubs

# The shard ID for this client. (0 if you aren't using multiple shards.)
SHARD_ID=0

# The shard count for this client. (0 if you aren't using multiple shards.)
SHARD_COUNT=0

# The BCP 47 locale for bot output.
LOCALE=en-US

# The IANA time zone for bot output.
TIMEZONE=America/Los_Angeles

# The host and port for statsd to run on, if statsd should be enabled.
STATSD_HOST=

# The prefix for statsd metric names.
STATSD_PREFIX=discordbot.

# True if verbose (e.g. per-message) logging should be enabled.
VERBOSE=false

# If set, Hubs rooms created by the bot with no scene specified will use this scene/GLTF/GLB/bundle URL as the scene.
DEFAULT_SCENE_URL=https://asset-bundles-prod.reticulum.io/rooms/atrium/Atrium.bundle.json

# True if local environment is setup and you're pointing your servers to a local reticulum instance
# False if in production
IS_RUNNING_LOCALLY=false
